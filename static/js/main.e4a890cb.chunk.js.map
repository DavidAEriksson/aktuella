{"version":3,"sources":["NavbarComponent.js","ProductItem.js","ProductList.js","SideNav.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavbarComponent","Navbar","expand","bg","variant","Brand","Nav","className","Link","style","color","Form","inline","FormControl","type","placeholder","Button","Component","ProductItem","this","props","product","productName","productContent","productImage","productPrice","Card","Body","Img","src","Title","marginTop","Subtitle","Text","ProductList","products","map","key","_id","SideNav","href","fontWeight","fontStyle","Badge","Footer","minHeight","width","backgroundColor","margin","textAlign","marginBottom","App","state","axios","get","then","res","data","console","log","setState","Container","fluid","marginLeft","Row","maxWidth","marginRight","Col","xs","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e4a890cb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nexport class NavbarComponent extends Component {\n  render() {\n    return (\n      <Navbar expand=\"xl\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>Fictional Company</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link style={{ color: \"#5EB1BF\" }}>Man</Nav.Link>\n          <Nav.Link>Woman</Nav.Link>\n          <Nav.Link>Kids</Nav.Link>\n          <Nav.Link>Outlet</Nav.Link>\n          <Nav.Link>Contact</Nav.Link>\n        </Nav>\n        <Form inline>\n          <FormControl\n            type=\"text\"\n            placeholder=\"search\"\n            className=\"mr-sm-2\"\n          ></FormControl>\n          <Button variant=\"outline-info\">Search</Button>\n        </Form>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavbarComponent;\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nexport class ProductItem extends Component {\n  render() {\n    const {\n      productName,\n      productContent,\n      productImage,\n      productPrice\n    } = this.props.product;\n\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Img variant=\"top\" src={productImage} />\n          <Card.Title style={{ marginTop: \"2vh\" }}>{productName}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            {productPrice}\n          </Card.Subtitle>\n          <Card.Text>{productContent}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default ProductItem;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProductItem from \"./ProductItem\";\n\nexport class ProductList extends Component {\n  render() {\n    return this.props.products.map(product => (\n      <ProductItem key={product._id} product={product} />\n    ));\n  }\n}\n\nProductList.propTypes = {\n  products: PropTypes.array.isRequired\n};\n\nexport default ProductList;\n","import React, { Component } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport class SideNav extends Component {\n  render() {\n    return (\n      <Nav className=\"flex-column\">\n        <Nav.Link href=\"#\" style={{ color: \"black\", fontWeight: \"bold\" }}>\n          T-shirts\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Shirts\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Sweaters & Hoodies\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Jackets\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Jeans\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Pants & Shorts\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Suits\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Underwear\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Socks\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\" }} href=\"#\">\n          Work out clothes\n        </Nav.Link>\n        <Nav.Link style={{ color: \"black\", fontStyle: \"italic\" }} href=\"#\">\n          Styles of the season <Badge variant=\"danger\">New!</Badge>\n        </Nav.Link>\n      </Nav>\n    );\n  }\n}\n\nexport default SideNav;\n","import React, { Component } from \"react\";\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          minHeight: \"100px\",\n          width: \"100%\",\n          backgroundColor: \"#343a40\",\n          margin: \"0px\",\n          marginTop: \"5vh\",\n          textAlign: \"center\"\n        }}\n      >\n        <p\n          style={{\n            marginBottom: \"0px\",\n            color: \"white\"\n          }}\n        >\n          Â© Fictional Company, INC.\n        </p>\n        <p\n          style={{\n            marginBottom: \"0px\",\n            color: \"white\"\n          }}\n        >\n          Another p-tag\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardColumn from \"react-bootstrap/CardColumns\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./NavbarComponent\";\nimport ProductList from \"./ProductList\";\nimport axios from \"axios\";\nimport SideNav from \"./SideNav\";\nimport Footer from \"./Footer\";\n\nclass App extends Component {\n  state = {\n    products: []\n  };\n\n  componentDidMount() {\n    axios.get(\"https://192.168.1.5:3002/api/products/get\").then(res => {\n      const products = res.data;\n      console.log(\"product list: \", products);\n      this.setState({ products });\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid={true}>\n        <Navbar />\n        <h1 style={{ marginTop: \"5vh\", marginLeft: \"10vw\" }}>Random Header</h1>\n        <Row\n          style={{\n            marginTop: \"10vh\",\n            maxWidth: \"80%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n        >\n          <Col xs=\"3\">\n            <p style={{ fontWeight: \"bolder\", fontSize: \"1.3em\" }}>\n              All mens clothes\n            </p>\n            <SideNav />\n          </Col>\n\n          <Col>\n            <p style={{ fontSize: \"2em\" }}>Mens T-Shirts</p>\n            <CardColumn>\n              <ProductList products={this.state.products} />\n            </CardColumn>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}